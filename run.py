# Search methods

import search, time

ab = search.GPSProblem('A', 'B', search.romania)
print("======================================[A -> B]======================================")
inicio = time.time()
print("En Anchura: " + str(search.breadth_first_graph_search(ab).path()))
print("Tiempo de ejecución anchura: " + str(time.time() - inicio))
inicio = time.time()
print("En Profundidad: " + str(search.depth_first_graph_search(ab).path()))
print("Tiempo de ejecución Profundidad: " + str(time.time() - inicio))
print("====================================================================================")

oe = search.GPSProblem('O', 'E', search.romania)
print("======================================[O -> E]======================================")
inicio = time.time()
print("En Anchura: " + str(search.breadth_first_graph_search(oe).path()))
print("Tiempo de ejecución anchura: " + str(time.time() - inicio))
inicio = time.time()
print("En Profundidad: " + str(search.depth_first_graph_search(oe).path()))
print("Tiempo de ejecución Profundidad: " + str(time.time() - inicio))
print("====================================================================================")

gz = search.GPSProblem('G', 'Z', search.romania)
print("======================================[G -> Z]======================================")
inicio = time.time()
print("En Anchura: " + str(search.breadth_first_graph_search(gz).path()))
print("Tiempo de ejecución anchura: " + str(time.time() - inicio))
inicio = time.time()
print("En Profundidad: " + str(search.depth_first_graph_search(gz).path()))
print("Tiempo de ejecución Profundidad: " + str(time.time() - inicio))
print("====================================================================================")

nd = search.GPSProblem('N', 'D', search.romania)
print("======================================[N -> D]======================================")
inicio = time.time()
print("En Anchura: " + str(search.breadth_first_graph_search(nd).path()))
print("Tiempo de ejecución anchura: " + str(time.time() - inicio))
inicio = time.time()
print("En Profundidad: " + str(search.depth_first_graph_search(nd).path()))
print("Tiempo de ejecución Profundidad: " + str(time.time() - inicio))
print("====================================================================================")

mf = search.GPSProblem('M', 'F', search.romania)
print("======================================[M -> F]======================================")
inicio = time.time()
print("En Anchura: " + str(search.breadth_first_graph_search(mf).path()))
print("Tiempo de ejecución anchura: " + str(time.time() - inicio))
inicio = time.time()
print("En Profundidad: " + str(search.depth_first_graph_search(mf).path()))
print("Tiempo de ejecución Profundidad: " + str(time.time() - inicio))
print("====================================================================================")
